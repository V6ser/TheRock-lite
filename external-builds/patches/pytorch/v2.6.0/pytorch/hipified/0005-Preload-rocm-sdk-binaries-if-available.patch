From d3b8afe9cf5a8aee4a8151fd723e261d9e7163c0 Mon Sep 17 00:00:00 2001
From: Stella Laurenzo <stellaraccident@gmail.com>
Date: Tue, 1 Apr 2025 18:49:42 -0700
Subject: [PATCH 5/7] Preload rocm-sdk binaries if available.

---
 torch/__init__.py | 27 ++++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

diff --git a/torch/__init__.py b/torch/__init__.py
index f361c6b6cd..ec8c49e8eb 100644
--- a/torch/__init__.py
+++ b/torch/__init__.py
@@ -305,6 +305,29 @@ def _preload_cuda_deps(lib_folder: str, lib_name: str) -> None:
 
 # See Note [Global dependencies]
 def _load_global_deps() -> None:
+    # Preload ROCm deps if this torch was built to link against rocm-sdk wheels.
+    # TODO: Lookup distribution info for the torch package and see if it was
+    # build with PYTORCH_EXTRA_INSTALL_REQUIREMENTS="rocm-sdk" to enable
+    # ROCm preloading.
+    try:
+        import rocm_sdk
+    except ModuleNotFoundError:
+        pass
+    else:
+        import rocm_sdk
+        rocm_sdk.preload_libraries(
+            "amdhip64",
+            "rocprofiler-sdk-roctx",
+            "hiprtc",
+            "hipblas",
+            "hipfft",
+            "hiprand",
+            "hipsparse",
+            "hipsolver",
+            "rccl",
+            "hipblaslt",
+        )
+
     if _running_with_deploy() or platform.system() == "Windows":
         return
 
@@ -2567,7 +2590,9 @@ def compile(
         nopython=fullgraph,
         dynamic=dynamic,
         disable=disable,
-    )(model)  # type: ignore[return-value]
+    )(
+        model
+    )  # type: ignore[return-value]
 
 
 def _register_device_module(device_type, module):
-- 
2.43.0

